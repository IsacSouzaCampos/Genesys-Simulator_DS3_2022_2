//// File automatically generated by GenESyS CppForG plugin
//#include <iostream>
#include <string>
#include "../../source/kernel/simulator/Entity.h"
#include "../../source/kernel/simulator/Model.h"
// user includes
#include "../../source/kernel/simulator/ModelSimulation.h"


void _onDispatchEvent_CppForG_1(Entity* entity, Model* model) {
	// user code
	std::cout << "Executando código do usuário" << std::endl;
	unsigned int numComponentes = model->getComponents()->getAllComponents()->size();
	std::cout << "Este modelo tem " << numComponentes << " componentes" << std::endl;
	double tnow = model->getSimulation()->getSimulatedTime();
	std::cout << "O tempo simulado atual é " << tnow << std::endl;
	
}

void _initBetweenReplications_CppForG_1(Model* model) {
	// user code
	std::cout << "Inicializando meu código" << std::endl;
	// mais nada	
}

extern "C" void onDispatchEvent_CppForG_1(Entity* entity, Model* model) {
	try {
		_onDispatchEvent_CppForG_1(entity, model);
	} catch (const std::exception& e) {
		model->getTracer()->traceError(e, "Error while executing onDispatchEvent cpp user code in CppForG_1.");
	}
}

extern "C" void initBetweenReplications_CppForG_1(Model* model) {
	try {
		_initBetweenReplications_CppForG_1(model);
	} catch (const std::exception& e) {
		model->getTracer()->traceError(e, "Error while executing initBetweenReplications cpp user code in CppForG_1.");
	}
}
